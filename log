BROKER SCHEMA vn.com.vpbank.AdpT24In
PATH ru.neoflex.common.utils.ESQLCache, ru.neoflex.common.utils.MessageUtils, ru.neoflex.common.utils.StringUtils;

CREATE COMPUTE MODULE AdpT24In_registerCA_adpt24inRq2asboRq
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();		
		DECLARE srcRoot REFERENCE TO InputRoot.XMLNSC.[<];	
		DECLARE srcItem REFERENCE TO srcRoot.accountDetails;
			
		DECLARE channelId CHARACTER mapIIBToSystem('APPID_TO_CHANNEL', 'T24', srcRoot.(XMLNSC.Attribute)applicationId);	
		DECLARE branchId CHARACTER COALESCE(srcItem.branchId, mapIIBToSystem('CHANNEL_TO_BRANCHID', 'T24', channelId));		
		DECLARE productType CHARACTER srcRoot.(XMLNSC.Attribute)productType;
		IF productType = 'BCA' THEN
			CALL createT24RequestCommon(InputRoot,OutputRoot,'ACCOUNT,SODEP.OPEN.NO.AUTH.VPB.EBANK',branchId,NULL);
		ELSE
			CALL createT24RequestCommon(InputRoot,OutputRoot,'ACCOUNT,OPEN.NO.AUTH.VPB.EBANK',branchId,NULL);	
		END IF;
		
		
		DECLARE trgRoot REFERENCE TO OutputRoot.JSON.Data;
		SET OutputLocalEnvironment.Destination.MQ.DestinationData[1].queueName = Q_T24JMS;
		SET OutputLocalEnvironment.Destination.RouterList.DestinationData[1].labelName = FIELDNAME(srcRoot);
		
		CALL createCriteria(trgRoot, 'ID ', srcItem.accountNumber);
		-- UB2-467 CALL createCriteria(trgRoot, 'CUSTOMER ', srcRoot.customer.customerNumber);
		
		IF (TRIM(UPPER(srcRoot.accountDetails.vpbService)) = 'UBANK' OR TRIM(UPPER(srcRoot.accountDetails.VPBService)) = 'UBANK') THEN
			CALL createCriteria(trgRoot, 'CUSTOMER ', COALESCE(srcRoot.customer.customerCode, srcRoot.customer.customerNumber));
		ELSE
			CALL createCriteria(trgRoot, 'CUSTOMER ', srcRoot.customer.customerNumber);
		END IF;
		-- End UB2-467
		CALL createCriteria(trgRoot, 'CATEGORY ', srcItem.category);
		CALL createMultiArray(trgRoot,srcItem.accountName,'ACCOUNT.TITLE.1',35);
		CALL createMultiArray(trgRoot,srcItem.shortAccountName,'SHORT.TITLE',35);
		CALL createCriteria(trgRoot, 'MNEMONIC ', srcItem.mnemonic);
		CALL createCriteria(trgRoot, 'CURRENCY ', srcItem.currency);           
		CALL createCriteria(trgRoot, 'ACCOUNT.OFFICER ', COALESCE(srcItem.DAO,mapIIBToSystem('CHANNEL_TO_DAO', 'T24',channelId )));		
		CALL createMultiValue(trgRoot, 'POSTING.RESTRICT', srcItem.postingRestrict);	 
		CALL createCriteria(trgRoot, 'CUST.TYPE ', COALESCE(srcRoot.customer.customerType,mapIIBToSystem('CHANNEL_TO_CUSTTYPE', 'T24', channelId) ));		
		CALL createCriteria(trgRoot, 'VPB.PRODUCT ', srcItem.productCode);
		CALL createCriteria(trgRoot, 'VPB.AUTHORISER ', srcItem.VPBAuthoriser);		
		CALL createCriteria(trgRoot, 'VPB.SERVICE ', COALESCE(srcItem.VPBService, mapIIBToSystem('CHANNEL_TO_VPBCHANNEL', 'T24', channelId)));
		CALL createCriteria(trgRoot, 'SERVICE.CHANNEL ',COALESCE(srcItem.channel,channelId));				
		
		IF CARDINALITY(srcItem.altAcctList.altAcctInfo[]) > 0 THEN
			FOR temp AS srcItem.altAcctList.altAcctInfo[] DO				
				DECLARE altAcctTypeNo INTEGER CAST(temp.altAcctTypeNo AS INTEGER);
				CALL createCriteriaGroup(trgRoot, 'ALT.ACCT.ID',temp.altAcctId,1,altAcctTypeNo);				
			END FOR;
		END IF;
		CALL createCriteria(trgRoot, 'DAO ', nullIfEmpty(srcItem.daoSale));
		--https://jira.vpbank.com.vn/browse/ECMBPM-161
		CALL createCriteria(trgRoot, 'PAYROLL.DATE ', cast2DateNumberic(srcItem.payrollDate));
		CALL createCriteria(trgRoot, 'PAYROLL.TYPE ', srcItem.payrollType);		
		IF CARDINALITY(srcItem.jointHolderList.jointHolderInfo[]) > 0 THEN
			DECLARE i, s, m INTEGER 1;
			FOR temp AS srcItem.jointHolderList.jointHolderInfo[] DO				
				CALL createMultiValue(trgRoot, 'JOINT.HOLDER', temp.jointHolderId);
				CALL createMultiValue(trgRoot, 'RELATION.CODE', temp.relationCode);
				IF LENGTH(temp.jointNote) > 35 THEN
					DECLARE trgParent ROW;
					CREATE LASTCHILD OF trgParent NAME 'tempList';
					SET i = stringToArray(FIELDVALUE(temp.jointNote), trgParent.tempList, 'Item', 35);
					FOR srcItem AS trgParent.tempList.Item[] DO						
						CALL createCriteriaGroup(trgRoot, 'JOINT.NOTES',temp.jointNote,s,m);
						SET m = m + 1;
					END FOR;
					SET trgParent.tempList = NULL;		
				ELSE
					CALL createCriteriaGroup(trgRoot, 'JOINT.NOTES',temp.jointNote,s,m);		
				END IF;
				SET s = s + 1;
			END FOR;
		END IF;
		CALL createCriteria(trgRoot, 'VPB.INPUTTER ', srcItem.vpbInputter);
		CALL createCriteria(trgRoot, 'DAO-PB ', srcItem.daoPb);
		--https://jira.vpbank.com.vn/browse/IBCORP-1635
	
		CALL createMultiArray(trgRoot,srcItem.alternateAccountName,'ACCOUNT.TITLE.2',35);
		--https://jira.vpbank.com.vn/browse/EBA-10430
		CALL createCriteria(trgRoot, 'SNMP ', srcItem.snmp);
		FOR bonusType AS srcItem.bonusTypeList.bonusType[] DO			
			CALL createMultiValue(trgRoot, 'BONUS.TYPE', FIELDVALUE(bonusType));
		END FOR;

        CALL createCriteria(trgRoot, 'VPB.AC.STATUS			', srcRoot.accountDetails.vpbAccStatus);
		CALL createCriteria(trgRoot, 'SEC.QUES.ANS			', srcItem.secQuesAns);
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
